/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerImp;
import controller.SanPham_DAO;
import java.io.File;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.SanPham;

/**
 *
 * @author LaptopDT
 */
public class SanPhamJDialog extends javax.swing.JDialog {

//    private MenuFrm menuHome;
    private MenuFrm test;

    private static final String currentDir = System.getProperty("user.dir");
    private static final String separator = File.separator;
    private static final String PATH_FILE_CSV_SanPham = currentDir + separator + "data" + separator + "FileCSV_SanPham_01.csv";

    private List<SanPham> ListSP;
    private DefaultTableModel modelSP;
    //private ControllerImp data;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");// dạng cần chuyển

    public SanPhamJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        test = (MenuFrm) parent;
        this.setLocationRelativeTo(null);
        ListSP = new SanPham_DAO().getListSanPham();
        modelSP = (DefaultTableModel) tblSanPham.getModel();
        new SanPham_DAO().initComboBox_LoaiSanPham(comboLoaiSP);
        showSanPham();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnRefresh_Update = new javax.swing.JButton();
        comboSort = new javax.swing.JComboBox<>();
        comboFilter = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNSX = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHSD = new javax.swing.JTextField();
        txt_GiaBan = new javax.swing.JTextField();
        txtGiaBan = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        comboLoaiSP = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        combo_NhaSX = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        combo_DonViTinh = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txt_GiaNhap = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txt_UpdateLoaiSP = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sản phẩm", "Tên sản phẩm", "Nhà sản xuất", "Loại sản phẩm", "Số lượng", "Đơn vị tính", "Gía nhập", "Giá bán", "NSX", "HSD"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        btnThem.setIcon(new javax.swing.ImageIcon("E:\\QUAN_LY_LINH_KIEN\\Quan_Ly_LinhKien\\src\\Image\\Add.png")); // NOI18N
        btnThem.setText("THÊM SP MỚI");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon("E:\\QUAN_LY_LINH_KIEN\\Quan_Ly_LinhKien\\src\\Image\\Change.png")); // NOI18N
        btnSua.setText("SỬA");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon("E:\\QUAN_LY_LINH_KIEN\\Quan_Ly_LinhKien\\src\\Image\\Delete.png")); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnExport.setIcon(new javax.swing.ImageIcon("E:\\QUAN_LY_LINH_KIEN\\Quan_Ly_LinhKien\\src\\Image\\Print Sale.png")); // NOI18N
        btnExport.setText("IN DANH SÁCH");

        btnRefresh_Update.setIcon(new javax.swing.ImageIcon("E:\\QUAN_LY_LINH_KIEN\\Quan_Ly_LinhKien\\src\\Image\\Refresh-icon.png")); // NOI18N
        btnRefresh_Update.setText("REFRESH");
        btnRefresh_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh_UpdateActionPerformed(evt);
            }
        });

        comboSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sắp xếp", "Sắp xếp theo tên SP (A-Z)", "Sắp xếp theo số lượng tăng dần", "Sắp xếp theo số lượng giảm dần", "Sắp xếp theo giá tiền tăng dần", "Sắp xếp theo giá tiền giảm dần", "Sắp xếp theo mã SP (A-Z)", " " }));
        comboSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSortActionPerformed(evt);
            }
        });

        comboFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lọc SP", "Lọc SP cùng nhà sản xuất", "Lọc top 10 SP có số lượng lớn nhất", "Lọc top 10 SP có số lượng nhỏ nhất", "Lọc top 10 SP có NSX gần với ngày hiện tại nhất", "Lọc danh sách SP đã quá hạn sử dụng" }));
        comboFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFilterActionPerformed(evt);
            }
        });

        jLabel2.setText("MÃ SẢN PHẨM");

        jLabel3.setText("TÊN SẢN PHẨM");

        jLabel4.setText("NGÀY SẢN XUẤT");

        jLabel5.setText("HẠN SỬ DỤNG");

        txt_GiaBan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_GiaBanKeyReleased(evt);
            }
        });

        txtGiaBan.setText("GIÁ BÁN");

        jLabel6.setText("SỐ LƯỢNG");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("QUẢN LÝ SẢN PHẨM");

        jButton4.setText("Thoát");

        jLabel7.setText("NHÀ SẢN XUẤT");

        combo_NhaSX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn", "Mixi Food", "Tân Hiệp Phát", "Pepsi", "Coca", "Vinamilk", "Tường An ", "Thorakao", "Pantene", "Clear", "X-Men" }));

        jLabel8.setText("ĐƠN VỊ TÍNH");

        combo_DonViTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 chiếc", "1 gói", "1 hộp", "1 chai", "1 lon", "1 lọ", "1 bịch", "1 két", "1 thùng", " " }));

        jLabel9.setText("GÍA NHẬP");

        txt_GiaNhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_GiaNhapKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaSP)
                                    .addComponent(combo_DonViTinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(combo_NhaSX, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_GiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(105, 105, 105)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(393, 393, 393)
                                .addComponent(btnRefresh_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(434, 434, 434)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(txtGiaBan)
                                .addGap(18, 18, 18)
                                .addComponent(txt_GiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtNSX, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(40, 40, 40)
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtHSD, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(comboFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(235, 235, 235)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(combo_NhaSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(combo_DonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txt_GiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_GiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaBan))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtHSD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRefresh_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("QL Sản Phẩm", jPanel1);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("CẬP NHẬT LOẠI SẢN PHẨM");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setText("LOẠI SẢN PHẨM");

        jButton1.setIcon(new javax.swing.ImageIcon("E:\\QUAN_LY_LINH_KIEN\\Quan_Ly_LinhKien\\src\\Image\\Add.png")); // NOI18N
        jButton1.setText("THÊM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(407, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_UpdateLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(433, 433, 433))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(501, 501, 501)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txt_UpdateLoaiSP)
                        .addGap(12, 12, 12)))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(397, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cập Nhật Loại Sản Phẩm", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1140, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Cập Nhật Nhà Sản Xuất", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void CapNhapSoLuong(JTextField txt_NhapTenSP, JTextField txt_soluong) {
        int slbanDau;
        int sl = Integer.parseInt(txt_soluong.getText());
        for (SanPham sp : ListSP) {
            if (sp.getTenSP().equalsIgnoreCase(txt_NhapTenSP.getText())) {
                slbanDau = sp.getSl();
                slbanDau += sl;
                new SanPham_DAO().Update_SoLuongSP(sp, txt_NhapTenSP.getText());
                ListSP.clear();
                ListSP.addAll(new SanPham_DAO().getListSanPham());
            }
        }
    }

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        String maSP, tenSP, NhaSX, LoaiSP, DonViTinh;
        int soLuong;
        int giaNhap, giaBan;
        boolean isOK = true;
        Date SX = null;
        LocalDate SXKiemtra = null;
        Date SD = null;
        LocalDate SDKiemtra = null;

        maSP = txtMaSP.getText();
        if (maSP.length() < 1 || maSP.length() > 10) {
            JOptionPane.showMessageDialog(rootPane, "Mã sản phẩm chưa hợp lệ, từ 3 đến 10 kí tự");
            return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
        }
        for (SanPham sp : ListSP) {
            if (sp.getMaSP().equals(maSP)) {
                JOptionPane.showMessageDialog(rootPane, "Mã sản phẩm bị trùng. Thêm không thành công");
                return;
            }
        }
        tenSP = txtTenSP.getText();
        if (tenSP.length() == 0 || tenSP.length() > 50) {
            JOptionPane.showMessageDialog(rootPane, "Tên sản phẩm chưa hợp lệ, từ 3 đến 50 kí tự");
            return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
        }

        NhaSX = combo_NhaSX.getSelectedItem().toString();
        if (NhaSX.equals("Chọn")) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn nhà sản xuất");
            return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
        }
        LoaiSP = comboLoaiSP.getSelectedItem().toString();
        if (LoaiSP.equals("LOẠI SẢN PHẨM")) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn loại sản phẩm tương ứng");
            return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
        }
        DonViTinh = combo_DonViTinh.getSelectedItem().toString();

        try {
            giaNhap = Integer.parseInt(txt_GiaNhap.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Gía nhập phải là số");
            return;
        }

        try {
            giaBan = Integer.parseInt(txt_GiaBan.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Gía bán phải là số");
            return;
        }

        try {
            soLuong = Integer.parseInt(txtSoLuong.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng phải là số");
            return;
        }

        String[] nsx = txtNSX.getText().split("/");
        String[] hsd = txtHSD.getText().split("/");
        int daysx = 0, monthsx = 0, yearsx = 0,
                dayhsd = 0, monthhsd = 0, yearhsd = 0;
        try {
            daysx = Integer.parseInt(nsx[0]);
            monthsx = Integer.parseInt(nsx[1]);
            yearsx = Integer.parseInt(nsx[2]);
            SXKiemtra = LocalDate.of(yearsx, monthsx, daysx);

            dayhsd = Integer.parseInt(hsd[0]);
            monthhsd = Integer.parseInt(hsd[1]);
            yearhsd = Integer.parseInt(hsd[2]);
            SDKiemtra = LocalDate.of(yearhsd, monthhsd, dayhsd);
        } catch (DateTimeException e) {
            JOptionPane.showMessageDialog(rootPane, "Lỗi:" + e);
            isOK = false;
        } catch (NumberFormatException a) {
            JOptionPane.showMessageDialog(rootPane, "Lỗi:" + a + " Xin nhập lại. VD:22/8/2001");
            isOK = false;
        }

        if (isOK) {
            String dateString = String.format("%d/%d/%d", daysx, monthsx, yearsx);
            String dateStringSD = String.format("%d/%d/%d", dayhsd, monthhsd, yearhsd);

            try {
                SX = sdf.parse(dateString);
                SD = sdf.parse(dateStringSD);
            } catch (ParseException ex) {
                Logger.getLogger(SanPhamJDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        for (SanPham sp : ListSP) {
            if (sp.getTenSP().equalsIgnoreCase(tenSP)) {
                int soluongBD = sp.getSl();
                int soLuongThem = soLuong + soluongBD;
                sp = new SanPham(soLuongThem);
                new SanPham_DAO().Update_SoLuongSP(sp, tenSP);
                ListSP.clear();
                ListSP.addAll(new SanPham_DAO().getListSanPham());
                JOptionPane.showMessageDialog(rootPane, "Vì sản phẩm đã tồn tại nên số lượng sản phẩm thêm thành công");
                showSanPham();
                return;
            }
        }
        SanPham sp = new SanPham(maSP, tenSP, NhaSX, LoaiSP, soLuong, DonViTinh, giaNhap, giaBan, SX, SD);
        if (new SanPham_DAO().addSanPham(sp)) {
            ListSP.add(sp);
            JOptionPane.showMessageDialog(rootPane, "Thêm dữ liệu thành công");
        } else {// nếu trùng khóa chính or v..v
            JOptionPane.showMessageDialog(rootPane, "Thêm dữ liệu không thành công!");
        }
        showSanPham();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        SanPham sp = new SanPham();
        int removeIndex = tblSanPham.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn 1 dòng rồi ấn Xóa!");
        } else if (ListSP.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin để Xóa!");
        } else {
            int choice = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn xóa thông tin không?", "Hỏi",
                    JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.NO_OPTION) {
                return;
            }
            sp = ListSP.get(removeIndex);
            new SanPham_DAO().delectSanPham(sp.getMaSP());
            ListSP.remove(removeIndex);
            showSanPham();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    public void setEditDataSP(SanPham s) {
        txtMaSP.setText(s.getMaSP());
        txtMaSP.setEditable(false);
        txtTenSP.setText(s.getTenSP());
        txt_GiaBan.setText(String.valueOf(s.getGiaBan()));
        txt_GiaNhap.setText(String.valueOf(s.getGiaNhap()));
        txtNSX.setText(String.valueOf(s.getNgaySX()));
        txtHSD.setText(String.valueOf(s.getHSD()));
        txtSoLuong.setText(String.valueOf(s.getSl()));
        comboLoaiSP.setActionCommand(s.getLoaiSP());
        combo_DonViTinh.setActionCommand(s.getDonViTinh());
        combo_NhaSX.setActionCommand(s.getNhaSanXuat());
    }

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed

        int selectIndex = tblSanPham.getSelectedRow();
        if (selectIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn 1 dòng rồi ấn Sửa!");
        } else {
            int choice = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn sửa thông tin không?", "Hỏi",
                    JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.NO_OPTION) {
                return;
            }

            String maSP, tenSP, NhaSX, LoaiSP, DonViTinh;
            int soLuong;
            int giaNhap, giaBan;
            boolean isOK = true;
            Date SX = null;
            LocalDate SXKiemtra = null;
            Date SD = null;
            LocalDate SDKiemtra = null;

            maSP = txtMaSP.getText();
            if (maSP.length() < 1 || maSP.length() > 10) {
                JOptionPane.showMessageDialog(rootPane, "Mã sản phẩm chưa hợp lệ, từ 3 đến 10 kí tự");
                return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
            }
            tenSP = txtTenSP.getText();
            if (maSP.length() == 0 || maSP.length() > 50) {
                JOptionPane.showMessageDialog(rootPane, "Tên sản phẩm chưa hợp lệ, từ 3 đến 50 kí tự");
                return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
            }
            NhaSX = combo_NhaSX.getSelectedItem().toString();
            if (NhaSX.equals("Chọn")) {
                JOptionPane.showMessageDialog(rootPane, "Hãy chọn nhà sản xuất");
                return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
            }
            LoaiSP = comboLoaiSP.getSelectedItem().toString();
            if (LoaiSP.equals("LOẠI SẢN PHẨM")) {
                JOptionPane.showMessageDialog(rootPane, "Hãy chọn loại sản phẩm tương ứng");
                return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
            }
            DonViTinh = combo_DonViTinh.getSelectedItem().toString();

            try {
                giaNhap = Integer.parseInt(txt_GiaNhap.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Gía nhập phải là số");
                return;
            }

            try {
                giaBan = Integer.parseInt(txt_GiaBan.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Gía bán phải là số");
                return;
            }

            try {
                soLuong = Integer.parseInt(txtSoLuong.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Số lượng phải là số");
                return;
            }

            String[] nsx = txtNSX.getText().split("/");
            String[] hsd = txtHSD.getText().split("/");
            int daysx = 0, monthsx = 0, yearsx = 0,
                    dayhsd = 0, monthhsd = 0, yearhsd = 0;
            try {
                daysx = Integer.parseInt(nsx[0]);
                monthsx = Integer.parseInt(nsx[1]);
                yearsx = Integer.parseInt(nsx[2]);
                SXKiemtra = LocalDate.of(yearsx, monthsx, daysx);

                dayhsd = Integer.parseInt(hsd[0]);
                monthhsd = Integer.parseInt(hsd[1]);
                yearhsd = Integer.parseInt(hsd[2]);
                SDKiemtra = LocalDate.of(yearhsd, monthhsd, dayhsd);
            } catch (DateTimeException e) {
                JOptionPane.showMessageDialog(rootPane, "Lỗi:" + e);
                isOK = false;
            } catch (NumberFormatException a) {
                JOptionPane.showMessageDialog(rootPane, "Lỗi:" + a + " Xin nhập lại. VD:22/8/2001");
                isOK = false;
            }

            if (isOK) {
                String dateString = String.format("%d/%d/%d", daysx, monthsx, yearsx);
                String dateStringSD = String.format("%d/%d/%d", dayhsd, monthhsd, yearhsd);

                try {
                    SX = sdf.parse(dateString);
                    SD = sdf.parse(dateStringSD);
                } catch (ParseException ex) {
                    Logger.getLogger(SanPhamJDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            SanPham sp = new SanPham(maSP, tenSP, NhaSX, LoaiSP, soLuong, DonViTinh, giaNhap, giaBan, SX, SD);
            // Lấy mã sản phẩm cần sửa từ table
            String maSPCanSua = tblSanPham.getValueAt(selectIndex, 1).toString();
            new SanPham_DAO().updateSanPham(sp, maSPCanSua);
            ListSP.add(sp);
            JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
        }
        ListSP.clear();// xóa hết dữ liệu cũ đi
        ListSP.addAll(new SanPham_DAO().getListSanPham());
        showSanPham();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        int dong = tblSanPham.getSelectedRow();

        if (dong >= 0) {
            // lấy dữ liệu từ tblSanPham getValueAt(dòng,cột) NOTE: cột từ 1-> n theo trong db
            String msp = tblSanPham.getValueAt(dong, 1).toString();
            txtMaSP.setText(msp);
            txtTenSP.setText(tblSanPham.getValueAt(dong, 2).toString());
            combo_NhaSX.setSelectedItem(tblSanPham.getValueAt(dong, 3));
            comboLoaiSP.setSelectedItem(tblSanPham.getValueAt(dong, 4));
            txtSoLuong.setText(tblSanPham.getValueAt(dong, 5).toString());
            combo_DonViTinh.setSelectedItem(tblSanPham.getValueAt(dong, 6));
            String[] s1 = tblSanPham.getValueAt(dong, 7).toString().split("\\s");
            txt_GiaNhap.setText(s1[0]);
            String[] s2 = tblSanPham.getValueAt(dong, 8).toString().split("\\s");
            txt_GiaBan.setText(s2[0]);
            txtNSX.setText(tblSanPham.getValueAt(dong, 9).toString());
            txtHSD.setText(tblSanPham.getValueAt(dong, 10).toString());
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private String cutChar(String arry) {
        return arry.replaceAll("\\D+", "");
    }

    private float convertedToNumbers(String s) {
        String number = "";
//        String[] array = s.replace(",", " ").split("\\s");
        String[] array = s.replace(",", " ").split(" ");
        for (String i : array) {
            number = number.concat(i);
        }
        return Float.parseFloat(number);
    }

    private void FormatMoney(JTextField money) {
        DecimalFormat formatter = new DecimalFormat("###,###,###");

        money.setText(cutChar(money.getText()));
        if (money.getText().equals("")) {
            return;
        } else {
            money.setText(formatter.format(convertedToNumbers(money.getText())));
        }
    }

    private void txt_GiaNhapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GiaNhapKeyReleased
//        FormatMoney(txt_GiaNhap);
    }//GEN-LAST:event_txt_GiaNhapKeyReleased

    private void txt_GiaBanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GiaBanKeyReleased
//        FormatMoney(txt_GiaBan);
    }//GEN-LAST:event_txt_GiaBanKeyReleased

    private void comboSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSortActionPerformed
        int index = comboSort.getSelectedIndex();
        if (index == 0) {
            JOptionPane.showMessageDialog(rootPane, "Xin lựa chọn các mục sắp xếp");
            return;
        } else if (index == 1) {
            new ControllerImp().sortByName(ListSP);
        } else if (index == 2) {
            new ControllerImp().sortByquantity_ASC(ListSP);;
        } else if (index == 3) {
            new ControllerImp().sortByquantity_DEC(ListSP);
        } else if (index == 4) {
            new ControllerImp().sortByMoney_ASC(ListSP);
        } else if (index == 5) {
            new ControllerImp().sortByMoney_DEC(ListSP);
        } else if (index == 6) {
            new ControllerImp().sortByMaSP(ListSP);
        }
        showSanPham();
    }//GEN-LAST:event_comboSortActionPerformed

    private void btnRefresh_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh_UpdateActionPerformed
        ListSP.clear();
        ListSP.addAll(new SanPham_DAO().getListSanPham());
        new SanPham_DAO().initComboBox_LoaiSanPham(comboLoaiSP);
        showSanPham();
    }//GEN-LAST:event_btnRefresh_UpdateActionPerformed

    private void comboFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFilterActionPerformed
        List<SanPham> list = new ArrayList<>();
        int i = comboFilter.getSelectedIndex();
        if (i == 0) {
            JOptionPane.showMessageDialog(rootPane, "Xin lựa chọn các mục lọc");
            return;
        } else if (i == 1) {
            String nhaSX = combo_NhaSX.getSelectedItem().toString();
            if (nhaSX.equals("Chọn")) {
                JOptionPane.showMessageDialog(rootPane, "Hãy chọn nhà sản xuất");
                return; // nếu sai thì thoát luôn khỏi hàm ko chạy tiếp nữa
            } else if (nhaSX.length() > 0) {
                new SanPham_DAO().LocSP_NhaSX(nhaSX, list);
            }
        } else if (i == 2) {
            new SanPham_DAO().LocTop10SP(5, "desc", list);
        } else if (i == 3) {
            new SanPham_DAO().LocTop10SP(5, "", list);
        } else if (i == 4) {
            new SanPham_DAO().LocTopSP_NSXganNhat(list);
        } else if (i == 5) {
            new SanPham_DAO().LocTopSP_QuaHSD(list);
            if (list.size() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Không có sản phẩm nào quá hạn sử dụng");
                return;
            }
        }
        ListSP.clear();// XÓA hết nội dung đi
        ListSP.addAll(list);// sau đó cập nhật lại
        showSanPham();
    }//GEN-LAST:event_comboFilterActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SanPham sp = new SanPham();
        String loaiSP = txt_UpdateLoaiSP.getText();
        sp.setLoaiSP(loaiSP);
        new SanPham_DAO().Update_LoaiSP(sp);
        JOptionPane.showMessageDialog(rootPane, "Thêm Loại Sản Phẩm Thành Công");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPhamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPhamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPhamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPhamJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SanPhamJDialog dialog = new SanPhamJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnRefresh_Update;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> comboFilter;
    private javax.swing.JComboBox<String> comboLoaiSP;
    private javax.swing.JComboBox<String> comboSort;
    private javax.swing.JComboBox<String> combo_DonViTinh;
    private javax.swing.JComboBox<String> combo_NhaSX;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JLabel txtGiaBan;
    private javax.swing.JTextField txtHSD;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtNSX;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txt_GiaBan;
    private javax.swing.JTextField txt_GiaNhap;
    private javax.swing.JTextField txt_UpdateLoaiSP;
    // End of variables declaration//GEN-END:variables

    private void showSanPham() {
        modelSP.setRowCount(0);
        int i = 1;
        for (SanPham sp : ListSP) {
            String nsx = sdf.format(sp.getNgaySX()); // chuyển từ dạng yyyy-mm-dd sang dd/mm/yyyy
            String hsd = sdf.format(sp.getHSD());
            modelSP.addRow(new Object[]{
                i++, sp.getMaSP(), sp.getTenSP(), sp.getNhaSanXuat(),
                sp.getLoaiSP(), sp.getSl(), sp.getDonViTinh(), sp.getGiaNhap(),
                sp.getGiaBan(), nsx, hsd});
        }
    }
}
